name: Publish NZBGet image

on:
  # manual trigger from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: "Tag to publish (e.g., 21.1)"
        required: true
        default: "21.1.4"
      make_latest:
        description: "Also tag as latest?"
        required: true
        default: "true"
  # auto build on main changes to Docker context
  push:
    branches: [ "main" ]
    paths:
      - "Dockerfile"
      - "**/*.sh"
      - "**/*.conf"
      - ".github/workflows/publish.yml"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # lets GITHUB_TOKEN push to GHCR
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image tags
        id: tags
        run: |
          IMAGE="ghcr.io/${{ github.actor }}/nzbget"
          VER="${{ github.event.inputs.version || '21.1' }}"
          echo "image=${IMAGE}" >> $GITHUB_OUTPUT
          echo "ver=${VER}" >> $GITHUB_OUTPUT
          # Decide tag list
          if [ "${{ github.event.inputs.make_latest || 'true' }}" = "true" ]; then
            echo "tags=${IMAGE}:${VER},${IMAGE}:latest" >> $GITHUB_OUTPUT
          else
            echo "tags=${IMAGE}:${VER}" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          build-args: |
            NZBGET_VERSION=${{ steps.tags.outputs.ver }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.tags.outputs.ver }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
